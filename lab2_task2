"""
Module for working with artists and their songs in Spotify
"""
import json
import base64
from requests import post, get

CLIENT_ID = "8b268ec6134a4118974e80e14b0e2152"
CLIENT_SECRET = "bb837606dd17488a97d5d5a5417a474e"

def get_token():
    """
    Function for getting token from client id and secret
    """
    auth_string = f"{CLIENT_ID}:{CLIENT_SECRET}"
    auth_base64 = base64.b64encode(auth_string.encode()).decode()

    url = 'https://accounts.spotify.com/api/token'
    auth_headers = {
        'Authorization': 'Basic ' + auth_base64,
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    auth_data = {'grant_type':'client_credentials'}
    result = post(url, headers = auth_headers, data = auth_data)
    json_result = json.loads(result.content)
    token = json_result['access_token']
    return token

def get_auth_header(token):
    """
    Function returns authorithation header for future requests
    """
    return {"Authorization": "Bearer " + token}

def search_for_artist(token, artist_name):
    """
    Function for getting artist's id
    """
    url = 'https://api.spotify.com/v1/search'
    headers = get_auth_header(token)
    query = f'?q={artist_name}&type=artist&limit=1'
    query_url = url + query
    result = get(query_url, headers=headers)
    json_result = json.loads(result.content)['artists']['items']
    if len(json_result) == 0:
        print('No artists with this name')
        return None
    return json_result[0]['id']

def get_song_id_by_artist_id(token, artist_id):
    """
    Function returns id of song
    """
    url = f'https://api.spotify.com/v1/artists/{artist_id}/top-tracks?country=UA'
    headers = get_auth_header(token)
    result = get(url, headers=headers)
    song = json.loads(result.content)['tracks'][0]['name']
    song_id = json.loads(result.content)['tracks'][0]['id']
    return song, song_id

def get_markets(token, song_id):
    """
    Function returns available markets for song
    """
    url = f'https://api.spotify.com/v1/tracks/{song_id}?country=UA'
    headers = get_auth_header(token)
    result = get(url, headers=headers)
    ava_market = json.loads(result.content)['available_markets']
    return ava_market

def get_general_info():
    """
    Function returns general information about artist 
    (name, the most popular song and available markets for this song)
    """
    print("Enter name of artist")
    name_of_artist = input(">>> ")
    token = get_token()
    artist_id = search_for_artist(token, name_of_artist)
    if artist_id is None:
        return None
    song_id = get_song_id_by_artist_id(token, artist_id)[1]
    top_song = get_song_id_by_artist_id(token, artist_id)[0]
    available_markets = get_markets(token, song_id)
    print("Please, enter what you want to know:")
    print("'artist name' - if you want to know artists's name")
    print("'song' - if you want to know artists's top song")
    print("'artist id' - if you want to know artists's ID")
    print("'available markets' - if you want to know available markets of top song")
    print("'all' - if you want to know all information about artist")
    print("'end' - if you want to finish")
    info = input(">>> ")
    while info != 'end':
        if info == 'artist name':
            print(name_of_artist)
            info = input(">>> ")
        elif info == 'song':
            print(top_song)
            info = input(">>> ")
        elif info == 'artist id':
            print(artist_id)
            info = input(">>> ")
        elif info == 'available markets':
            print(available_markets)
            info = input(">>> ")
        elif info == 'all':
            print(f'name of artist - {name_of_artist}, top song - {top_song},\
                   artist ID - {artist_id}, available markets - {available_markets}')
            info = input(">>> ")
        else:
            print("Wrong input")
            break
    print("That's all")
get_general_info()
